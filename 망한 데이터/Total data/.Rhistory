a <- apply(as.data.frame(collected.col[,-c(1,2)]), 1, "-", key[,-c(1,2)])
b <- unlist(a) ^ 2
c <- as.data.frame(matrix(b, length(b)/(length(collected.col)-2),
length(collected.col)-2, byrow = T))
colnames(c) <- colnames(collected.col)[-c(1, 2)]
p.length <- apply(c, 1, mean, na.rm = T)
n.point <- order(p.length)[2:6]
d <- sec[n.point, 17]
sec.0[na.row[i], 3] <- mean(d, na.rm = T)
i <- 44L
col <- !is.na(sec[na.row[i],])
collected.col <- sec[, col]
key <- collected.col[na.row[i],]
a <- apply(as.data.frame(collected.col[,-c(1,2)]), 1, "-", key[,-c(1,2)])
b <- unlist(a) ^ 2
key <- collected.col[na.row[i],]
a <- apply(as.data.frame(collected.col[,-c(1,2)]), 1, "-", key[,-c(1,2)])
View(key)
View(sec)
sec <- read.csv("sec.rm.csv")
sec.0 <- KNN(sec, 17)
sec.0 <- sec[,c(1, 2, 17)]
i <- 44L
na.row <- NULL
na.row <- which(is.na(sec.0[, 3]))
colSums(is.na(sec))
length(na.row)
sec <- read.csv("sec.rm.csv")
sec.0 <- KNN(sec, 17)
for(i in 1:length(na.row)){
col <- !is.na(sec[na.row[i],])
collected.col <- sec[, col]
key <- collected.col[na.row[i],]
a <- apply(as.data.frame(collected.col[,-c(1,2)]), 1, "-", key[,-c(1,2)])
b <- unlist(a) ^ 2
c <- as.data.frame(matrix(b, length(b)/(length(collected.col)-2),
length(collected.col)-2, byrow = T))
colnames(c) <- colnames(collected.col)[-c(1, 2)]
p.length <- apply(c, 1, mean, na.rm = T)
n.point <- order(p.length)[2:6]
d <- sec[n.point, 17]
sec.0[na.row[i], 3] <- mean(d, na.rm = T)
}
na.row[56]
sec <- read.csv("sec.rm.csv")
sec.0 <- KNN(sec, 17)
View(sec.0)
which(is.na(sec.0[, 3]))
ter.0 <- KNN(ter, 17)
View(ter.0)
obesity <- read.csv("Obesity.csv", header=T)
obesity <- read.csv("Obesityrm.csv", header=T)
obesity <- read.csv("Obesity.rm.csv", header=T)
View(obesity)
obs.0 <- KNN(sec,19)
View(obs.0)
obesity <- read.csv("Obesity.rm.csv", header=T)
obs.0 <- KNN(obesity,19)
obs.0 <- KNN(obesity,19)
View(obesity)
which(is.na(obesity[,19]))
obs.0 <- obesity[,c(1, 2, 19)]
View(obs.0)
hiv <- read.csv("hiv.rm.csv")
View(hiv)
which(is.na(hiv[,19]))
KNN <- function(data, year){
if(length(which(is.na(data[,year]))) == 0) return(data[,c(1,2, year)])
na.row <- which(is.na(data[, year])) #기준 년도에서 NA인 row추출
for(i in 1:length(na.row)){
col <- !is.na(data[na.row[i],]) #key observation에서 NA가 아닌 col 추출
collected.col <- data[, col] #data에서 col column들을 추출
key <- collected.col[na.row[i],] #key observation의 row 추출
a <- apply(as.data.frame(collected.col[,-c(1,2)]), 1, "-", key[,-c(1,2)]) #두 값의 차
b <- unlist(a) ^ 2 #차의 제곱
c <- as.data.frame(matrix(b, length(b)/(length(collected.col)-2),
length(collected.col)-2, byrow = T)) #vector b를 data.frame으로 형변환
colnames(c) <- colnames(collected.col)[-c(1, 2)]
p.length <- apply(c, 1, mean, na.rm = T) #각 년도별로 구해진 길이들의 평균.
n.point <- order(p.length)[2:6] #첫번째 요소는 자기 자신이라서 제외해줬다. key와 가장 가까운 5개의 point 추출
d <- data[n.point, year] #key와 가까운 5개의 point의 점수 추출
data[na.row[i], year] <- mean(d, na.rm = T) # 추출된 근처 값들의 평균을 넣어줌.
}
return(data[,c(1, 2, year)])
}
KNN(obesity, 19)
sec.0 <- KNN(sec, 17)
View(sec.0)
View(hiv)
hiv.0 <- KNN(hiv, 19)
View(hiv.0)
pre <- read.scv("pre.rm.csv")
pre <- read.csv("pre.rm.csv")
View(pre)
colSums(is.na(pre[,]))
pre.0 <- KNN(pre, 17)
pre.0 <- pre[,c(1,2, 17)]
rm(list=ls())
setwd("c:/Users/정은/Desktop/new_bigdata_set/above 2000")
pre <- read.csv("pre.rm.csv")
pre.0 <- pre[,c(1,2, 17)]
na.row <- which(pre,0[,3] == NA)
na.row <- which(is.na(pre.0[,3]))
i <- 1L
col <- !is.na(pre[na.row[i],])
collected.col <- pre[, col]
View(collected.col)
collected.col <- pre[, col]
key <- collected.col[na.row[i],]
a <- apply(as.data.frame(collected.col[,-c(1,2)]), 1, "-", key[,-c(1,2)])
b <- unlist(a) ^ 2
c <- as.data.frame(matrix(b, length(b)/(length(collected.col)-2),
length(collected.col)-2, byrow = T))
View(c)
colnames(c) <- colnames(collected.col)[-c(1, 2)]
p.length <- apply(c, 1, mean, na.rm = T)
n.point <- order(p.length)[2:6]
d <- pre[n.point, ]
d <- pre[n.point, 17]
pre.0[na.row[i], 3] <- mean(d, na.rm = T)
View(pre.0)
for(i in 1:length(na.row)){
col <- !is.na(pre[na.row[i],])
collected.col <- pre[, col]
key <- collected.col[na.row[i],]
a <- apply(as.data.frame(collected.col[,-c(1,2)]), 1, "-", key[,-c(1,2)])
b <- unlist(a) ^ 2
c <- as.data.frame(matrix(b, length(b)/(length(collected.col)-2),
length(collected.col)-2, byrow = T))
colnames(c) <- colnames(collected.col)[-c(1, 2)]
p.length <- apply(c, 1, mean, na.rm = T)
n.point <- order(p.length)[2:6]
d <- pre[n.point, 17]
pre.0[na.row[i], 3] <- mean(d, na.rm = T)
}
for(i in 6:length(na.row)){
col <- !is.na(pre[na.row[i],])
collected.col <- pre[, col]
key <- collected.col[na.row[i],]
a <- apply(as.data.frame(collected.col[,-c(1,2)]), 1, "-", key[,-c(1,2)])
b <- unlist(a) ^ 2
c <- as.data.frame(matrix(b, length(b)/(length(collected.col)-2),
length(collected.col)-2, byrow = T))
colnames(c) <- colnames(collected.col)[-c(1, 2)]
p.length <- apply(c, 1, mean, na.rm = T)
n.point <- order(p.length)[2:6]
d <- pre[n.point, 17]
pre.0[na.row[i], 3] <- mean(d, na.rm = T)
}
na.row[28]
for(i in 29:length(na.row)){
col <- !is.na(pre[na.row[i],])
collected.col <- pre[, col]
key <- collected.col[na.row[i],]
a <- apply(as.data.frame(collected.col[,-c(1,2)]), 1, "-", key[,-c(1,2)])
b <- unlist(a) ^ 2
c <- as.data.frame(matrix(b, length(b)/(length(collected.col)-2),
length(collected.col)-2, byrow = T))
colnames(c) <- colnames(collected.col)[-c(1, 2)]
p.length <- apply(c, 1, mean, na.rm = T)
n.point <- order(p.length)[2:6]
d <- pre[n.point, 17]
pre.0[na.row[i], 3] <- mean(d, na.rm = T)
}
for(i in 30:length(na.row)){
col <- !is.na(pre[na.row[i],])
collected.col <- pre[, col]
key <- collected.col[na.row[i],]
a <- apply(as.data.frame(collected.col[,-c(1,2)]), 1, "-", key[,-c(1,2)])
b <- unlist(a) ^ 2
c <- as.data.frame(matrix(b, length(b)/(length(collected.col)-2),
length(collected.col)-2, byrow = T))
colnames(c) <- colnames(collected.col)[-c(1, 2)]
p.length <- apply(c, 1, mean, na.rm = T)
n.point <- order(p.length)[2:6]
d <- pre[n.point, 17]
pre.0[na.row[i], 3] <- mean(d, na.rm = T)
}
pre <- read.csv("pre.rm.csv")
colSums(is.na(pre[,]))
pre.0 <- KNN(pre, 17)
KNN <- function(data, year){
if(length(which(is.na(data[,year]))) == 0) return(data[,c(1,2, year)])
na.row <- which(is.na(data[, year])) #기준 년도에서 NA인 row추출
for(i in 1:length(na.row)){
col <- !is.na(data[na.row[i],]) #key observation에서 NA가 아닌 col 추출
collected.col <- data[, col] #data에서 col column들을 추출
key <- collected.col[na.row[i],] #key observation의 row 추출
a <- apply(as.data.frame(collected.col[,-c(1,2)]), 1, "-", key[,-c(1,2)]) #두 값의 차
b <- unlist(a) ^ 2 #차의 제곱
c <- as.data.frame(matrix(b, length(b)/(length(collected.col)-2),
length(collected.col)-2, byrow = T)) #vector b를 data.frame으로 형변환
colnames(c) <- colnames(collected.col)[-c(1, 2)]
p.length <- apply(c, 1, mean, na.rm = T) #각 년도별로 구해진 길이들의 평균.
n.point <- order(p.length)[2:6] #첫번째 요소는 자기 자신이라서 제외해줬다. key와 가장 가까운 5개의 point 추출
d <- data[n.point, year] #key와 가까운 5개의 point의 점수 추출
data[na.row[i], year] <- mean(d, na.rm = T) # 추출된 근처 값들의 평균을 넣어줌.
}
return(data[,c(1, 2, year)])
}
pre.0 <- KNN(pre, 17)
View(pre.0)
pri <- read.csv("pri.rm.csv")
colSums(pri)
colSums(is.na(pri))
pri.0 <- KNN(pri, 17)
sani <- read.csv("sani.rm.csv")
View(sani)
sani.0 <- KNN(sani, 18)
View(sani.0)
rm(list=ls())
setwd("c:/Users/정은/Desktop/new_bigdata_set/above 2000")
KNN <- function(data, year){
if(length(which(is.na(data[,year]))) == 0) return(data[,c(1,2, year)])
na.row <- which(is.na(data[, year])) #기준 년도에서 NA인 row추출
for(i in 1:length(na.row)){
col <- !is.na(data[na.row[i],]) #key observation에서 NA가 아닌 col 추출
collected.col <- data[, col] #data에서 col column들을 추출
key <- collected.col[na.row[i],] #key observation의 row 추출
a <- apply(as.data.frame(collected.col[,-c(1,2)]), 1, "-", key[,-c(1,2)]) #두 값의 차
b <- unlist(a) ^ 2 #차의 제곱
c <- as.data.frame(matrix(b, length(b)/(length(collected.col)-2),
length(collected.col)-2, byrow = T)) #vector b를 data.frame으로 형변환
colnames(c) <- colnames(collected.col)[-c(1, 2)]
p.length <- apply(c, 1, mean, na.rm = T) #각 년도별로 구해진 길이들의 평균.
n.point <- order(p.length)[2:6] #첫번째 요소는 자기 자신이라서 제외해줬다. key와 가장 가까운 5개의 point 추출
d <- data[n.point, year] #key와 가까운 5개의 point의 점수 추출
data[na.row[i], year] <- mean(d, na.rm = T) # 추출된 근처 값들의 평균을 넣어줌.
}
return(data[,c(1, 2, year)])
}
life <- read.csv("life.rm.csv")
life.0 <- KNN(life, 18)
gdp <- read.csv("gdp.rm.csv")
gdp.0 <- KNN(gdp, 19)
co2 <- read.csv("co2.rm.csv")
co2.0 <- KNN(co2, 17)
ter <- read.csv("ter.rm.csv")
ter.0 <- KNN(ter, 17)
smo <- read.csv("smo.rm.2.CSV")
which(is.na(smo[,3]))
which(is.na(smo[,4]))
avg <- apply(smo[,c(3,4)], 2, mean, na.rm = T)
smo[which(is.na(smo[,3])),3] <- avg[1]
smo[which(is.na(smo[,4])),4] <- avg[2]
sec <- read.csv("sec.rm.csv")
sec.0 <- KNN(sec, 17)
obesity <- read.csv("Obesity.rm.csv", header=T)
KNN(obesity, 19)
obs.0 <- obesity[,c(1, 2, 19)]
hiv <- read.csv("hiv.rm.csv")
hiv.0 <- KNN(hiv, 19)
pre <- read.csv("pre.rm.csv")
pre.0 <- KNN(pre, 17)
pri <- read.csv("pri.rm.csv")
pri.0 <- KNN(pri, 17)
sani <- read.csv("sani.rm.csv")
sani.0 <- KNN(sani, 18)
setwd("c:/Users/정은/Desktop")
setwd("c:/Users/정은/Desktop")
write.csv(co2.0, "co2.rv.csv", row.names = F)
write.csv(gdp.0, "gdp.rv.csv", row.names = F)
write.csv(hiv.0, "hiv.rv.csv", row.names = F)
write.csv(life.0, "life.rv.csv", row.names = F)
write.csv(obs.0, "ob.rv.csv", row.names = F)
write.csv(pre.0, "pre.rv.csv", row.names = F)
write.csv(pri.0, "pri.rv.csv", row.names = F)
write.csv(sani.0, "sani.rv.csv", row.names = F)
write.csv(smo, "smo.rv.csv", row.names = F)
write.csv(sec.0, "sec.rv.csv", row.names = F)
write.csv(ter.0, "ter.rv.csv", row.names = F)
rm(list=ls())
setwd("c:/Users/정은/Desktop/new_bigdata_set/data revised")
smo <- read.csv("smo.rv.csv")
View(smo)
co2 <- read.csv("co2.rv.csv")
gdp <- read.csv("gdp.rv.csv")
hiv <- read.csv("hiv.rv.csv")
life <- read.csv("life.rv.csv")
ob <- read.csv("ob.rv.csv")
pre <- read.csv("pre.rv.csv")
pri <- read.csv("pri.rv.csv")
sani <- read.csv("sani.rv.csv")
sec <- read.csv("sec.rv.csv")
smo <- read.csv("smo.rv.csv")
ter <- read.csv("ter.rv.csv")
merge(life, gdp, by = Country.Code)
View(life)
merge(life, gdp)
df <- merge(life, gdp)
df <- merge(life, gdp)
df <- merge(df, sani)
df <- merge(df, pre)
df <- merge(df, pri)
df <- merge(df, ter)
df <- merge(df, smo)
df <- merge(df, al)
df <- merge(df, hiv)
df <- merge(df, sec)
df <- merge(df, ob)
df <- merge(df, co2)
df <- merge(life, gdp)
df <- merge(df, sani)
df <- merge(df, pre)
df <- merge(df, pri)
df <- merge(life, gdp)
df <- merge(df, sani)
df <- merge(life, gdp)
df <- merge(df, sani)
df <- merge(life, gdp)
df <- merge(df, sani)
df <- merge(life, gdp)
df <- merge(df, pre)
df <- merge(df, pri)
df <- merge(life, gdp)
df <- merge(df, pre)
df <- merge(life, gdp, by.x=Country.Code)
df <- merge(life, gdp, by.x = life$Country.Code)
life[2]
names(life[2])
names(gdp[2])
df <- merge(life, gdp, by.x = life[2])
df <- merge(life, gdp, by.x = Country.Code)
df <- merge(life, gdp, key = Country.Code)
df <- merge(life, gdp, key = Country.Code)
df <- merge(df, sani, key = Country.Code)
View(sani)
View(df)
df <- merge(life, gdp, key = Country.Code)
View(df)
intersect(df[2], sani[2])
class(sani[2])
class(df[2])
intersect(df[2], sani[2])
intersect(as.character(df[2]), as.character(sani[2]))
co2 <- co2[order(co2$Country.Code),]
al <- read.csv("al.rv.csv")
co2 <- co2[order(co2$Country.Code),]
gdp <- gdp[order(gdp$Country.Code),]
hiv <- hiv[order(hiv$Country.Code),]
life <- life[order(life$Country.Code),]
ob <- ob[order(ob$Country.Code),]
pre <- pre[order(pre$Country.Code),]
pri <- pri[order(pri$Country.Code),]
sani <- sani[order(sani$Country.Code),]
sec <- sec[order(sec$Country.Code),]
ter <- ter[order(ter$Country.Code),]
al <- al[order(al$Country.Code),]
smo <- smo[order(smo$Country.Code),]
al <- al[order(al$Country.Code),]
df <- merge(life, gdp, key = Country.Code)
df <- merge(df, sani, key = Country.Code)
df <- merge(life, gdp, key = Country.Code)
df <- merge(gdp, sani, key = Country.Code)
df <- merge(df, pre, key = Country.Code)
df <- merge(df, pri, key = Country.Code)
df <- merge(gdp, sani, key = Country.Code)
df <- merge(df, pre, key = Country.Code)
df <- merge(df, sec, key = Country.Code)
df <- merge(gdp, sani, key = Country.Code)
df <- merge(df, pre, key = Country.Code)
df <- merge(df, ter, key = Country.Code)
df <- merge(gdp, sani, key = Country.Code)
df <- merge(df, pre, key = Country.Code)
df <- merge(df, smo, key = Country.Code)
df <- merge(df, ob, key = Country.Code)
df <- merge(gdp, sani, key = Country.Code)
df <- merge(df, pre, key = Country.Code)
df <- merge(df, smo, key = Country.Code)
df <- merge(df, al, key = Country.Code)
df <- merge(gdp, sani, key = Country.Code)
df <- merge(df, pre, key = Country.Code)
df <- merge(df, smo, key = Country.Code)
df <- merge(df, co2, key = Country.Code)
df <- merge(gdp, sani, key = Country.Code)
df <- merge(df, pre, key = Country.Code)
df <- merge(df, smo, key = Country.Code)
df <- merge(df, hiv, key = Country.Code)
df <- merge(gdp, sani, key = Country.Code)
df <- merge(df, pre, key = Country.Code)
df <- merge(df, smo, key = Country.Code)
df <- merge(df, al, key = Country.Code)
a <- merge(life, gdp, key = Country.Code)
b <- merge(sani, pre, key = Country.Code)
c <- merge(pri, sec, key = Country.Code)
d <- merge(ter, smo, key = Country.Code)
e <- merge(ob, al, key = Country.Code)
f <- merge(co2, hiv, key = Country.Code)
View(pri)
View(sec)
b <- merge(b, pri, key = Country.Code)
b <- merge(sani, pre, key = Country.Code)
d <- merge(d, sec, key = Country.Code)
a <- merge(life, gdp, key = Country.Code)
b <- merge(sani, pre, key = Country.Code)
d <- merge(ter, smo, key = Country.Code)
e <- merge(ob, al, key = Country.Code)
f <- merge(co2, hiv, key = Country.Code)
pri[2]
as.character(pri[2])
p.name <- as.character(pri[2])
p.name
p.name <- as.character(pri$Country.Code)
s.name <- as.character(sec$Country.Code)
intersect(p.name, s.name)
common <- intersect(p.name, s.name)
pri[pri$Country.Code %in% common,]
pri.0 <- pri[pri$Country.Code %in% common,]
pri.0 <- pri[pri$Country.Code %in% common,]
sec.0 <- sec[sec$Country.Code %in% common,]
merge(pri.0, sec.0)
row.names(pri.0)
View(pri.0)
View(sec.0)
c <- cbind(pri.0, sec.0$X2014)
View(c)
b <- merge(b, c)
intersect(as.character(b$Country.Code), as.character(c$Country.Code))
b.name <- as.character(b$Country.Code)
View(b)
a <- merge(life, gdp, key = Country.Code)
b <- merge(sani, pre, key = Country.Code)
b.name <- as.character(b$Country.Code)
intersect(b.name, as.character(c$Country.Code))
common1 <- intersect(as.character(b$Country.Code), as.character(c$Country.Code))
b.0 <- b[b$Country.Code %in% common,]
c.0 <- c[c$Country.Code %in% common,]
b.0 <- b[b$Country.Code %in% common,]
c.0 <- c[c$Country.Code %in% common,]
b.0 <- b[b$Country.Code %in% common1,]
c.0 <- c[c$Country.Code %in% common1,]
merge(b.0, c.0)
b.1 <- cbind(b.0, c.0[,c(3,4)])
View(b.1)
merge(a, b.1)
merge(d,e)
last <- merge(d, e)
last <- merge(last, f)
View(last)
common1 <- intersect(as.character(a$Country.Code), as.character(c$Country.Code))
common1 <- intersect(as.character(a$Country.Code), as.character(b$Country.Code))
common1 <- intersect(common1, as.character(c$Country.Code))
common1 <- intersect(as.character(a$Country.Code), as.character(b$Country.Code))
common1 <- intersect(common1, as.character(c$Country.Code))
common1 <- intersect(common1, as.character(d$Country.Code))
common1 <- intersect(common1, as.character(e$Country.Code))
a.0 <- a[a$Country.Code %in% common1,]
b.0 <- b[b$Country.Code %in% common1,]
c.0 <- c[c$Country.Code %in% common1,]
d.0 <- d[d$Country.Code %in% common1,]
e.0 <- e[e$Country.Code %in% common1,]
View(b.0)
View(c.0)
View(d.0)
df <- cbind(a.0, b.0[,3:4], c.0[,3:4], d.0[,3:5], e.0[,3:4])
View(df)
colnames(df)[-c(1,2)] <- c("life", "gdp", "sani", "pre", "pri", "sec", "ter", "smo.tob", "smo.cig", "ob", "al")
colnames(df)[-c(1,2)] <- c("life", "gdp", "sani", "pre", "pri", "sec", "ter", "smo.tob", "smo.cig", "ob", "al", "hiv")
colnames(df) <- c("Country.Name", "Country.Code","life", "gdp", "sani", "pre", "pri", "sec",
"ter", "smo.tob", "smo.cig", "ob", "al", "hiv")
colnames(df) <- c("Country.Name", "Country.Code","life", "gdp", "sani", "pre", "pri", "sec",
"ter", "smo.tob", "smo.cig", "ob", "al", "co2", "hiv")
colnames(df) <- c("Country.Name", "Country.Code","life", "gdp", "sani", "pre", "pri", "sec",
"ter", "smo.tob", "smo.cig", "ob", "al", "co2", "hiv")
ncol(df)
common1 <- intersect(as.character(a$Country.Code), as.character(b$Country.Code))
common1 <- intersect(common1, as.character(c$Country.Code))
common1 <- intersect(common1, as.character(d$Country.Code))
common1 <- intersect(common1, as.character(e$Country.Code))
a.0 <- a[a$Country.Code %in% common1,]
b.0 <- b[b$Country.Code %in% common1,]
c.0 <- c[c$Country.Code %in% common1,]
d.0 <- d[d$Country.Code %in% common1,]
e.0 <- e[e$Country.Code %in% common1,]
df <- cbind(a.0, b.0[,3:4], c.0[,3:4], d.0[,3:5], e.0[,3:4])
View(df)
common1 <- intersect(common1, as.character(f$Country.Code))
f.0 <- f[f$Country.Code %in% common1,]
df <- cbind(a.0, b.0[,3:4], c.0[,3:4], d.0[,3:5], e.0[,3:4], f.0[,3:4])
df <- cbind(a.0, b.0[,3:4], c.0[,3:4], d.0[,3:5], e.0[,3:4])
common1 <- intersect(as.charater(df$Country.Code), as.character(f$Country.Code))
common1 <- intersect(as.character(df$Country.Code), as.character(f$Country.Code))
f.0 <- f[f$Country.Code %in% common1,]
df <- cbind(df, f.0[,3:4])
df1 <- cbind(df, f.0[,3:4])
View(df)
View(f.0)
common1 <- intersect(as.character(df$Country.Code), as.character(f$Country.Code))
which(common1 == "Maldives")
which(common1 == "Maldives")
df1 <- cbind(df[df$Country.Code %in% common1], f.0[,3:4])
df1 <- cbind(df[df$Country.Code %in% common1,], f.0[,3:4])
View(df1)
colnames(df) <- c("Country.Name", "Country.Code","life", "gdp", "sani", "pre", "pri", "sec",
"ter", "smo.tob", "smo.cig", "ob", "al", "co2", "hiv")
colnames(df1) <- c("Country.Name", "Country.Code","life", "gdp", "sani", "pre", "pri", "sec",
"ter", "smo.tob", "smo.cig", "ob", "al", "co2", "hiv")
View(df1)
write.csv(df1, "dataframe.non.race.csv")
setwd("c:/Users/정은/Desktop/new_bigdata_set/Total data")
setwd("c:/Users/정은/Desktop/new_bigdata_set/Total data")
df1 <- read.csv("dataframe.non.race.csv")
write.csv(df1, "dataframe.non.race.csv", row.names = f)
write.csv(df1, "dataframe.non.race.csv", row.names = F)
write.csv(df1, "dataframe.non.race.csv", row.names = F)
setwd("c:/Users/정은/Desktop/new_bigdata_set/Total data")
df1 <- read.csv("dataframe.non.race.csv")
write.csv(df1, "dataframe.non.race.csv", row.names = F)
write.csv(df1, "dataframe.non.race.csv", row.names = F)
View(df1)
write.csv(df1[,-1], "dataframe.non.race.csv", row.names = F)
write.csv(df1[,-1], "dataframe.non.race.csv", row.names = F)
