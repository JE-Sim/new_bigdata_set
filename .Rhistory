team.2 <- aggregate(team.1, list(league, team.1$yearID), sum)
team.1 <- subset(Teams, yearID >= 1965)
league <- factor(lgID, levels=c("AL", "NL"))
library(Lahman)
data(Teams)
names(Teams)
help(Teams)
team.1 <- subset(Teams, yearID >= 1965)
league <- factor(lgID, levels=c("AL", "NL"))
team.2 <- aggregate(team.1, list(league, team.1$yearID), sum)
data(Teams)
team.1 <- subset(Teams, yearID >= 1965)
league <- factor(team.1$lgID, levels=c("AL", "NL"))
team.2 <- aggregate(team.1, list(league, team.1$yearID), sum)
league
install.packages("kknn")
data(iris)
str(iris)
table(iris$Species)
kknn(iris, train, test, na.action=na.omit(),k=7)
kknn.dist(irist)
kknn.dist(iris)
library(kknn)
kknn(iris, train, test, na.action=na.omit(),k=7)
kknn(iris, train=knn_train, test=knn_test, na.action=na.omit(),k=7)
library(kknn)
kknn(iris, train=knn_train, test=knn_test, na.action=na.omit(),k=7)
head(iris)
iris[1:150] <- lapply(iris[1:150],normalize)
return((x-min(x))/max(x)-min(x))
normalize <- function(x){
return((x-min(x))/max(x)-min(x))
}
iris[1:150] <- lapply(iris[1:150],normalize)
iris <- lapply(iris,normalize)
knn_train <- iris[1:150,]
class(iris)
knn_test <- iris[79:150,]
kknn(iris, train=knn_train, test=knn_test, na.action=na.omit(),k=7)
kknn_fint <- fitted(wbcd_kknn)
kknn_fint <- fitted(abcd)
abcd <- kknn(iris, train=knn_train, test=knn_test, na.action=na.omit(),k=7)
kknn_fint <- fitted(abcd)
train <- rbind(iris3[1:25,,1], iris3[1:25,,2], iris3[1:25,,3])
test <- rbind(iris3[26:50,,1], iris3[26:50,,2], iris3[26:50,,3])
cl <- factor(c(rep("s",25), rep("c",25), rep("v",25)))
knn(train, test, cl, k = 3, prob=TRUE)
library(kknn)
train <- rbind(iris3[1:25,,1], iris3[1:25,,2], iris3[1:25,,3])
test <- rbind(iris3[26:50,,1], iris3[26:50,,2], iris3[26:50,,3])
cl <- factor(c(rep("s",25), rep("c",25), rep("v",25)))
knn(train, test, cl, k = 3, prob=TRUE)
kknn(train, test, cl, k = 3, prob=TRUE)
kknn(train, test, cl, k = 3)
kknn(train, test, cl, k = 3)
distance(iris)
set.wd("C:/Users/양수형/Documents/GitHub/new_bigdata_set/raw data", header=T)
setwd("C:/Users/양수형/Documents/GitHub/new_bigdata_set/raw data", header=T)
setwd("C:/Users/양수형/Documents/GitHub/new_bigdata_set/raw data", header=T)
setwd("C:/Users/양수형/Documents/GitHub/new_bigdata_set/raw data")
Obesity <- read.csv("Obesity raw data.csv", header = TRUE)
Obesity <- read.csv("Obesity.raw.data.csv", header = TRUE)
setwd("C:/Users/양수형/Documents/GitHub/new_bigdata_set/raw data")
Obesity <- read.csv("Obesity.raw.data.csv", header = TRUE)
Obesity[,2] <- substr(Obesity[,2],1,4)
Obesity[,3] <- substr(Obesity[,3],1,4)
Obesity[,4] <- substr(Obesity[,4],1,4)
Obesity[,5] <- substr(Obesity[,5],1,4)
Obesity
Obesity.1 <- na.omit(Obesity.1)
Obesity.1 <- na.omit(Obesity)
Obesity <- Obesity.1[order(Obesity.1$Country.Name),]
View(Obesity.1)
Obesity[,2] <- substr(Obesity[,2],1,18)
Obesity[,3] <- substr(Obesity[,3],1,18)
Obesity[,4] <- substr(Obesity[,4],1,18)
Obesity[,5] <- substr(Obesity[,5],1,18)
Obesity
View(Obesity)
Obesity.1 <- na.omit(Obesity)
Obesity <- Obesity.1[order(Obesity.1$Country.Name),]
substr(Obesity[,2],1,18)
substr(Obesity[,2],1,4)
for (i in 2:18){
Obesity[,i] <- substr(Obesity[,i],1,4)
}
View(Obesity)
Obesity.1 <- na.omit(Obesity)
Obesity.2 <- Obesity.1[order(Obesity.1$Country.Name),]
View(Obesity.1)
Obesity.2 <- Obesity.1[order(Obesity.1$Country),]
c.name <- as.character(country.code$Country.Name)
names(Obesity.2)
names(Obesity)
Obesity.2[,1:18]
Obesity.3 <- Obesity.2[,1:18]
country.code <- read.table("All.asia.csv", header=T)
country.code <- read.table("All.asia.csv", header=T)
write.csv(Obesity.3, "Obesity.3.csv")
order(Obesity.3[,2:18])
country.code <- read.table("country.code.csv", header=T)
country.code <-read.table("country.code.csv", header=T)
country.code <-read.table("country.code.csv", header=T)
country.code <-read.csv("country.code.csv", header=T)
View(country.code)
c.name <- as.character(country.code$Country.Name)
Obesity.4 <- read.csv("Obesity.3.csv", header=T)
country.code <-read.csv("country.code.csv", header=T)
o.name <- as.character(Obesity.4$Country.Name)
c.name <- as.character(country.code$Country.Name)
common <- intersect(c.name, o.name)
country.code <- country.code[order(country.code$Country.Name),]
View(country.code)
common <- intersect(c.name, o.name)
Obesity.4 <- read.csv("Obesity.3.csv", header=T)
country.code <-read.csv("country.code.csv", header=T)
c.name <- as.character(country.code$Country.Name)
o.name <- as.character(Obesity.4$Country)
common <- intersect(c.name, o.name)
country.code <- country.code[order(country.code$Country.Name),]
o.name1 <- country.code[country.code$Country.Name %in% common,]
obesity0 <- Obesity.4[Obesity.4$Country %in% common,]
Obesityn <- cbind(o.name1, obesity0[,-1])
View(Obesityn)
country.code <- country.code[,c(1,3)]
View(country.code)
c.name <- as.character(country.code$Country.Name)
o.name <- as.character(Obesity.4$Country)
common <- intersect(c.name, o.name)
country.code <- country.code[order(country.code$Country.Name),]
o.name1 <- country.code[country.code$Country.Name %in% common,]
obesity0 <- Obesity.4[Obesity.4$Country %in% common,]
Obesityn <- cbind(o.name1, obesity0[,-1])
Obesityn$X2016[as.character(Obesity1$X2016) == "No d"] <- NA
View(Obesityn)
write.csv(obesityn, "Obesity.rm.csv")
write.csv(Obesityn, "Obesity.rm.csv")
write.csv(Obesityn, "Obesity.rm.csv", row.names = FALSE)
pre <- read.csv("pre.rm.csv",header=T)
sum(is.na(pre$X2014))
sum(is.na(pre$X2015))
sum(is.na(pre$X2013))
sum(is.na(pre$X2014))
KNN <- function(data, year){
na.row <- which(is.na(data[, year])) #기준 년도에서 NA인 row추출
for(i in 1:length(na.row)){
col <- !is.na(data[na.row[i],]) #key observation에서 NA가 아닌 col 추출
collected.col <- data[, col] #data에서 col column들을 추출
key <- collected.col[na.row[i],] #key observation의 row 추출
a <- apply(as.data.frame(collected.col[,-c(1,2)]), 1, "-", key[,-c(1,2)]) #두 값의 차
b <- unlist(a) ^ 2 #차의 제곱
c <- as.data.frame(matrix(b, length(b)/(length(collected.col)-2),
length(collected.col)-2, byrow = T)) #vector b를 data.frame으로 형변환
colnames(c) <- colnames(collected.col)[-c(1, 2)]
p.length <- apply(c, 1, mean, na.rm = T) #각 년도별로 구해진 길이들의 평균.
n.point <- order(p.length)[2:6] #첫번째 요소는 자기 자신이라서 제외해줬다. key와 가장 가까운 5개의 point 추출
d <- data[n.point, year] #key와 가까운 5개의 point의 점수 추출
data[na.row[i], year] <- mean(d, na.rm = T) # 추출된 근처 값들의 평균을 넣어줌.
}
return(data[,c(1, 2, year)])
}
al <- read.csv("alchol.csv")
smo <- read.csv("smo.rm.2.CSV")
setwd("C:/Users/양수형/Documents/GitHub/new_bigdata_set/above 2000")
al <- read.csv("alchol.csv")
al <- read.csv("alchol.rm.csv")
al <- read.csv("alcohol.rm.csv")
which(is.na(al[,3]))
View(al)
avg <- apply(al[,c(3)], 3, mean, na.rm = T)
avg <- apply(al[,c(3)], 2, mean, na.rm = T)
avg <- apply(al[,3], 2, mean, na.rm = T)
avg <- mean(al[,3])
avg <- mean(al[,3], na.rm=T)
al[which(is.na(al[,3])),3] <- avg
View(al)
write.csv(al, "al.rv.csv",row.names = F)
setwd("C:/Users/양수형/Documents/GitHub/new_bigdata_set")
racial <- read.table("ratio.txt")
racial <- read.csv("ratio.txt", sep = "")
View(racial)
racial <- read.table("ratio.txt", sep = "\t")
racial <- read.table("ratio.txt", sep = "\t", header=F)
