setwd("C:/Users/정은/Desktop/new_bigdata_set/above 2000")
hiv1 <- read.csv("hiv.rm.csv")
setwd("C:/Users/정은/Desktop/new_bigdata_set/above 2000")
hiv1 <- read.csv("hiv.rm.csv")
setwd("C:/Users/정은/Desktop/new_bigdata_set/final_hiv_revised")
hiv2 <- read.csv("hiv2.raw.data.csv")
hiv.com <- intersect(as.character(hiv1[[2]]), as.character(hiv2[[2]]))
hiv2[!(hiv2[[2]] %in% hiv.com), ]
hiv.0 <- cbind(hiv2[!(hiv2[[2]] %in% hiv.com), ], x2015 = NA, x2016 = NA)
intersect(hiv1, hiv.0)
View(hiv2)
View(hiv.0)
View(hiv1)
View(hiv.0)
View(hiv1)
View(hiv1)
View(hiv.0)
hiv.com <- intersect(as.character(hiv1[[2]]), as.character(hiv2[[2]]))
hiv2[!(hiv2[[2]] %in% hiv.com), ]
hiv.0 <- cbind(hiv2[!(hiv2[[2]] %in% hiv.com), ], x2015 = NA, x2016 = NA)
View(hiv1)
colnames(hiv.0)[c(1,2)] <- c("Country.Name", "Country.Code")
View(hiv.0)
View(hiv1)
colnames(hiv.0) <- colnames(hiv1)
rbind(hiv1, hiv.0)
hiv <- rbind(hiv1, hiv.0)
View(hiv)
View(hiv)
hiv <- hiv[order(hiv$Country.Code),]
View(hiv)
View(hiv)
hiv[order(hiv$Country.Code),]
a <- hiv[order(hiv$Country.Code),]
View(a)
order(hiv$Country.Code)
level(hiv$Country.Code)
levels(hiv$Country.Code)
factor <- levels(hiv$Country.Code)
sort(factor)
factor1 <- sort(factor)
levels(hiv$Country.Code) <- factor1
View(hiv)
factor1 <- factor[order(factor)])
factor1 <- factor[order(factor)]
levels(hiv$Country.Code) <- factor1
View(hiv)
order(factor)
levels(hiv$Country.Code) <- order(factor)
View(hiv)
View(a)
a <- hiv[order(hiv$Country.Code),]
View(a)
levels(hiv$Country.Code) <- factor[order(factor)]
View(hiv)
setwd("C:/Users/정은/Desktop/new_bigdata_set/above 2000")
hiv1 <- read.csv("hiv.rm.csv")
setwd("C:/Users/정은/Desktop/new_bigdata_set/final_hiv_revised")
hiv2 <- read.csv("hiv2.raw.data.csv")
hiv.com <- intersect(as.character(hiv1[[2]]), as.character(hiv2[[2]]))
hiv2[!(hiv2[[2]] %in% hiv.com), ]
hiv.0 <- cbind(hiv2[!(hiv2[[2]] %in% hiv.com), ], x2015 = NA, x2016 = NA)
colnames(hiv.0) <- colnames(hiv1)
hiv <- rbind(hiv1, hiv.0)
h.code <- as.character(hiv$Country.Code)
View(hiv)
order.code <- order(h.code)
a <- hiv[order(hiv$Country.Code),]
h1 <- h.code[order.code]
a <- hiv[order.code,]
View(a)
hiv <- hiv[order.code,]
View(hiv)
rm(a)
KNN <- function(data, year){
if(length(which(is.na(data[,year]))) == 0) return(data[,c(1,2, year)])
na.row <- which(is.na(data[, year])) #기준 년도에서 NA인 row추출
for(i in 1:length(na.row)){
col <- !is.na(data[na.row[i],]) #key observation에서 NA가 아닌 col 추출
collected.col <- data[, col] #data에서 col column들을 추출
key <- collected.col[na.row[i],] #key observation의 row 추출
index <- complete.cases(collected.col) #NA가 하나도 없는 row 추출
non.na <- collected.col[index,] #NA를 제거함.
a <- apply(as.data.frame(non.na[,-c(1,2)]), 1, "-", key[,-c(1,2)]) #두 값의 차
b <- unlist(a) ^ 2 #차의 제곱
c <- as.data.frame(matrix(b, length(b)/(length(collected.col)-2),
length(collected.col)-2, byrow = T)) #vector b를 data.frame으로 형변환
colnames(c) <- colnames(non.na)[-c(1, 2)]
p.length <- apply(c, 1, sum) #각 년도별로 구해진 길이들의 합
o.p <- order(p.length) #길이들의 합을 최소 순서로 배열
n.point <- o.p[which(!is.na(data[o.p, year]))][1:5] #year 칼럼에 NA가 아닌 것들 중에서 작은거 5개
d <- data[n.point, year] #key와 가까운 5개의 point의 점수 추출
data[na.row[i], year] <- mean(d, na.rm = T) # 추출된 근처 값들의 평균을 넣어줌.
}
return(data[,c(1, 2, year)])
}
View(hiv)
KNN(hiv, 19)
hiv.com <- intersect(as.character(hiv1[[2]]), as.character(hiv2[[2]]))
hiv2[!(hiv2[[2]] %in% hiv.com), ]
hiv.1 <- cbind(hiv2[!(hiv2[[2]] %in% hiv.com), ], x2015 = NA, x2016 = NA)
colnames(hiv.1) <- colnames(hiv1)
hiv <- rbind(hiv1, hiv.1)
h.code <- as.character(hiv$Country.Code)
order.code <- order(h.code)
hiv <- hiv[order.code,]
KNN <- function(data, year){
if(length(which(is.na(data[,year]))) == 0) return(data[,c(1,2, year)])
na.row <- which(is.na(data[, year])) #기준 년도에서 NA인 row추출
for(i in 1:length(na.row)){
col <- !is.na(data[na.row[i],]) #key observation에서 NA가 아닌 col 추출
collected.col <- data[, col] #data에서 col column들을 추출
key <- collected.col[na.row[i],] #key observation의 row 추출
index <- complete.cases(collected.col) #NA가 하나도 없는 row 추출
non.na <- collected.col[index,] #NA를 제거함.
a <- apply(as.data.frame(non.na[,-c(1,2)]), 1, "-", key[,-c(1,2)]) #두 값의 차
b <- unlist(a) ^ 2 #차의 제곱
c <- as.data.frame(matrix(b, length(b)/(length(collected.col)-2),
length(collected.col)-2, byrow = T)) #vector b를 data.frame으로 형변환
colnames(c) <- colnames(non.na)[-c(1, 2)]
p.length <- apply(c, 1, sum) #각 년도별로 구해진 길이들의 합
o.p <- order(p.length) #길이들의 합을 최소 순서로 배열
n.point <- o.p[which(!is.na(data[o.p, year]))][1:5] #year 칼럼에 NA가 아닌 것들 중에서 작은거 5개
d <- data[n.point, year] #key와 가까운 5개의 point의 점수 추출
data[na.row[i], year] <- mean(d, na.rm = T) # 추출된 근처 값들의 평균을 넣어줌.
}
return(data[,c(1, 2, year)])
}
hiv.0 <- KNN(hiv, 19)
setwd("C:/Users/정은/Desktop/new_bigdata_set/final data revised")
View(hiv.0)
write.csv(hiv.0, "hiv.rv.csv", row.names = F)
hiv <- read.csv("hiv.rv.csv")
rm(list=ls())
setwd("C:/Users/정은/Desktop/new_bigdata_set/final data revised")
co2 <- read.csv("co2.rv.csv")
gdp <- read.csv("gdp.rv.csv")
hiv <- read.csv("hiv.rv.csv")
life <- read.csv("life.rv.csv")
ob <- read.csv("ob.rv.csv")
pre <- read.csv("pre.rv.csv")
pri <- read.csv("pri.rv.csv")
setwd("C:/Users/정은/Desktop/new_bigdata_set/final data revised")
co2 <- read.csv("co2.rv.csv")
gdp <- read.csv("gdp.rv.csv")
hiv <- read.csv("hiv.rv.csv") #193obs.짜리로 개정함 유후~
life <- read.csv("life.rv.csv")
ob <- read.csv("ob.rv.csv")
pre <- read.csv("pre.rv.csv")
pri <- read.csv("pri.rv.csv")
sani <- read.csv("sani.rv.csv")
sec <- read.csv("sec.rv.csv")
smo <- read.csv("smo.rv.csv")
ter <- read.csv("ter.rv.csv")
al <- read.csv("al.rv.csv")
co2 <- co2[order(co2$Country.Code),]
gdp <- gdp[order(gdp$Country.Code),]
hiv <- hiv[order(hiv$Country.Code),]
life <- life[order(life$Country.Code),]
ob <- ob[order(ob$Country.Code),]
pre <- pre[order(pre$Country.Code),]
pri <- pri[order(pri$Country.Code),]
sani <- sani[order(sani$Country.Code),]
sec <- sec[order(sec$Country.Code),]
smo <- smo[order(smo$Country.Code),]
ter <- ter[order(ter$Country.Code),]
al <- al[order(al$Country.Code),]
common <- intersect(as.character(co2[[2]]), as.character(gdp[[2]]))
common <- intersect(common, as.character(hiv[[2]]))
common <- intersect(common, as.character(life[[2]]))
common <- intersect(common, as.character(ob[[2]]))
common <- intersect(common, as.character(pre[[2]]))
common <- intersect(common, as.character(pri[[2]]))
common <- intersect(common, as.character(sec[[2]]))
common <- intersect(common, as.character(sani[[2]]))
common <- intersect(common, as.character(smo[[2]]))
common <- intersect(common, as.character(ter[[2]]))
common <- intersect(common, as.character(al[[2]]))
common <- intersect(as.character(co2[[2]]), as.character(gdp[[2]]))
common <- intersect(common, as.character(hiv[[2]]))
common <- intersect(as.character(co2[[2]]), as.character(gdp[[2]]))
common <- intersect(common, as.character(hiv[[2]]))
common <- intersect(common, as.character(life[[2]]))
common <- intersect(common, as.character(ob[[2]]))
common <- intersect(common, as.character(pre[[2]]))
common <- intersect(common, as.character(pri[[2]]))
common <- intersect(common, as.character(sec[[2]]))
common <- intersect(common, as.character(sani[[2]]))
common <- intersect(common, as.character(smo[[2]]))
common <- intersect(common, as.character(ter[[2]]))
common <- intersect(common, as.character(al[[2]]))
View(hiv)
x.9 <- al[al[[2]] %in% common, 3]
x.10 <- co2[co2[[2]] %in% common, 3]
x.1 <- gdp[gdp[[2]] %in% common, 3]
x.11 <- hiv[hiv[[2]] %in% common, 3]
y <- life[life[[2]] %in% common, ]
x.8 <- ob[ob[[2]] %in% common, 3]
x.3 <- pre[pre[[2]] %in% common, 3]
x.4 <- pri[pri[[2]] %in% common, 3]
x.2 <- sani[sani[[2]] %in% common, 3]
x.5 <- sec[sec[[2]] %in% common, 3]
x.7 <- smo[smo[[2]] %in% common, c(3, 4)]
x.6 <- ter[ter[[2]] %in% common, 3]
df <- cbind( y, gdp = x.1, sani = x.2, pre = x.3, pri = x.4, sec = x.5,
ter = x.6, smo = x.7, ob = x.8, al = x.9, co2 = x.10, hiv = x.11)
View(df)
setwd("c:/Users/정은/Desktop/new_bigdata_set/Final Total Data")
write.csv(df, "final.csv", row.names = F)
write.csv(df, "Sleeping princess in penguin room.csv", row.names = F)
setwd("c:/Users/정은/Desktop/new_bigdata_set/Final Total Data")
df1 <- read.csv("Sleeping princess in penguin room.csv")
View(df1)
df <- read.csv("Sleeping princess in penguin room.csv")
df1 <- df[,-c(1, 2)]
par(mfrow = c(3, 4))
for (j in c(2:13)){
plot(df1[,j], life, color=c("white","gray"), xlab=colnames(df1)[j], main=paste("x", j))
}
life <- df[[3]]
gdp <- df[[4]]; sani <- df[[5]]; pre <- df[[6]]; pri <- df[[7]]
sec <- df[[8]]; ter <- df[[9]]; smo <- df[[11]]; ob <- df[[12]]
al <- df[[13]]; co2 <- df[[14]]; hiv <- df[[15]]
reg <- lm(life~gdp+sani+pre+pri+sec+ter+smo+ob+al+co2+hiv)
plot(reg$residuals, type = "n", main = "residual plot", ylab = "residuals"); abline(h=0, lty="dotted")
text(reg$residuals, names(reg$residuals), cex = 0.7)
plot(reg$fitted.values, reg$residuals, type = "n", main = "residual plot", xlab = "y.hat", ylab = "residuals")
abline(h = 0, lty = "dotted")
text(reg$fitted.values, reg$residuals, names(reg$fitted.values), cex = 0.7)
par(mfrow = c(1,2))
plot(reg$residuals, type = "n", main = "residual plot", ylab = "residuals"); abline(h=0, lty="dotted")
text(reg$residuals, names(reg$residuals), cex = 0.7)
plot(reg$fitted.values, reg$residuals, type = "n", main = "residual plot", xlab = "y.hat", ylab = "residuals")
abline(h = 0, lty = "dotted")
text(reg$fitted.values, reg$residuals, names(reg$fitted.values), cex = 0.7)
anova.reg <- anova(reg)
View(anova.reg)
names(df)
df1 <- df[,-c(1, 2)]
for (j in c(2:13)){
plot(df1[,j], life, color=c("white","gray"), xlab=colnames(df1)[j], main=paste("x", j))
}
par(mfrow = c(3, 4))
for (j in c(2:13)){
plot(df1[,j], life, color=c("white","gray"), xlab=colnames(df1)[j], main=paste("x", j))
}
for (j in c(2:13)){
obj <- lm(life, df[j])
}
for (j in c(2:13)){
plot(df1[,j], life, color=c("white","gray"), xlab=colnames(df1)[j], main=paste("x", j))
abline(lm(life~df1[[j]]))
}
par(mfrow = c(3, 4))
for (j in c(2:13)){
plot(df1[,j], life, color=c("white","gray"), xlab=colnames(df1)[j], main=paste("x", j))
abline(lm(life~df1[[j]]), col="red")
}
list.obj <- list()
for (j in c(2:13)){
obj <- lm(life, df1[[j]])
i <- j-1
list.obj[i] <- obj
}
for (j in c(2:13)){
obj <- lm(life, df1[[j]])
i <- j-1
list.obj[[i]] <- obj
}
list.obj <- list()
for (j in c(2:13)){
obj <- lm(life ~ df1[[j]])
i <- j-1
list.obj[i] <- obj
}
warning()
for (j in c(2:13)){
obj <- lm(life ~ df1[[j]])
i <- j-1
list.obj[i] <- obj
}
for (j in c(2:13)){
obj <- lm(life ~ df1[j])
i <- j-1
list.obj[i] <- obj
}
for (j in c(2:13)){
obj <- lm(life ~ df1[,j])
i <- j-1
list.obj[i] <- obj
}
par(mfrow = c(3, 4))
for (j in c(2:13)){
plot(df1[,j], life, color=c("white","gray"), xlab=colnames(df1)[j], main=paste("x", j))
abline(lm(life~df1[,j]), col="red")
}
